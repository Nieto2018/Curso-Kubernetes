apiVersion: v1
kind: Namespace
metadata:
  name: dev
  labels:
    name: dev
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cm-role # ConfigMap role
  namespace: dev
rules:
- apiGroups: [""] # "" indicates the core API group, es vac√≠o porque los recursos son pods
  resources: ["configmaps"]
  verbs: ["get", "watch", "list", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
# This role binding allows "jane" to read pods in the "default" namespace.
# You need to already have a Role named "pod-reader" in that namespace.
kind: RoleBinding
metadata:
  name: cm-role
  namespace: dev
subjects:
# You can specify more than one "subject"
- kind: User
  name: antonio # "name" is case sensitive
  apiGroup: rbac.authorization.k8s.io
roleRef:
  # "roleRef" specifies the binding to a Role / ClusterRole
  kind: Role #this must be Role or ClusterRole
  name: cm-role # this must match the name of the Role or ClusterRole you wish to bind to
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: dev
  name: vars
  labels:
    app: front
data:
  db_host: dev.host.local
  db_user: dev_user